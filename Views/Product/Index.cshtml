@model IEnumerable<LTTW_Tuan6.Models.Product>

@{
    ViewData["Title"] = "Danh sách sản phẩm";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h1 class="mb-0">
                        <i class="fas fa-boxes"></i> Danh sách sản phẩm
                    </h1>
                </div>
                <div class="card-body">
                    @if (TempData["Success"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle"></i> @TempData["Success"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (TempData["Error"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-circle"></i> @TempData["Error"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    <!-- Search and Filter Section -->
                    <div class="row mb-4">
                        <div class="col-md-4">
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-search"></i>
                                </span>
                                <input type="text" class="form-control" id="searchInput" placeholder="Tìm kiếm theo tên sản phẩm...">
                            </div>
                        </div>
                        <div class="col-md-3">
                            <select class="form-select" id="categoryFilter">
                                <option value="">Tất cả danh mục</option>
                                @{
                                    var categories = Model.Where(p => p.Category != null)
                                    .Select(p => p.Category)
                                    .Distinct()
                                    .OrderBy(c => c.Name);
                                }
                                @foreach (var category in categories)
                                {
                                    <option value="@category?.Name">@category?.Name</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-3">
                            <select class="form-select" id="sortBy">
                                <option value="name-asc">Tên A-Z</option>
                                <option value="name-desc">Tên Z-A</option>
                                <option value="price-asc">Giá thấp đến cao</option>
                                <option value="price-desc">Giá cao đến thấp</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <button type="button" class="btn btn-outline-secondary w-100" id="clearFilters">
                                <i class="fas fa-times"></i> Xóa bộ lọc
                            </button>
                        </div>
                    </div>

                    <!-- Products Grid -->
                    <div class="row g-4" id="productsContainer">
                        @if (Model != null && Model.Any())
                        {
                            foreach (var item in Model)
                            {
                                <div class="col-xl-3 col-lg-4 col-md-6 col-sm-12 product-item"
                                     data-name="@item.Name?.ToLower()"
                                     data-category="@item.Category?.Name"
                                     data-price="@item.Price">
                                    <div class="card h-100 product-card">
                                        <div class="image-container">
                                            @if (item.Images != null && item.Images.Any())
                                            {
                                                <img src="@item.Images.First().Url"
                                                     class="card-img-top product-image"
                                                     alt="@item.Name"
                                                     loading="lazy"
                                                     onerror="this.src='/images/no-image.jpg'">

                                                @if (item.Images.Count > 1)
                                                {
                                                    <div class="image-count">
                                                        <i class="fas fa-images"></i> @item.Images.Count
                                                    </div>
                                                }
                                            }
                                            else
                                            {
                                                <img src="/images/no-image.jpg"
                                                     class="card-img-top product-image"
                                                     alt="No image"
                                                     loading="lazy">
                                            }

                                            <!-- Quick Actions Overlay -->
                                            <div class="quick-actions">
                                                <a asp-action="Details" asp-route-id="@item.Id"
                                                   class="btn btn-sm btn-outline-light"
                                                   title="Xem chi tiết">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                            </div>
                                        </div>

                                        <div class="card-body d-flex flex-column">
                                            <h5 class="card-title text-truncate" title="@item.Name">
                                                @item.Name
                                            </h5>

                                            <p class="card-text description-text">
                                                @if (!string.IsNullOrEmpty(item.Description))
                                                {
                                                    @(item.Description.Length > 100 ? item.Description.Substring(0, 100) + "..." : item.Description)
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Chưa có mô tả</span>
                                                }
                                            </p>

                                            <div class="mt-auto">
                                                <div class="price-section mb-3">
                                                    <h4 class="price-text mb-1">
                                                        @item.Price.ToString("N0") VNĐ
                                                    </h4>
                                                    @if (item.Category != null)
                                                    {
                                                        <small class="text-muted">
                                                            <i class="fas fa-tag"></i> @item.Category.Name
                                                        </small>
                                                    }
                                                </div>

                                                <div class="action-buttons">
                                                    <a asp-action="Details" asp-route-id="@item.Id"
                                                       class="btn btn-info btn-sm">
                                                        <i class="fas fa-info-circle"></i> Chi tiết
                                                    </a>
                                                    <button type="button" class="btn btn-primary btn-sm">
                                                        <i class="fas fa-shopping-cart"></i> Mua hàng
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="col-12">
                                <div class="text-center py-5">
                                    <i class="fas fa-box-open fa-5x text-muted mb-4"></i>
                                    <h3 class="text-muted">Chưa có sản phẩm nào</h3>
                                    <p class="text-muted mb-4">Hãy thêm sản phẩm đầu tiên của bạn (từ Admin)!</p>
                                </div>
                            </div>
                        }
                    </div>

                    <!-- No Results Message -->
                    <div id="noResults" class="text-center py-5" style="display: none;">
                        <i class="fas fa-search fa-3x text-muted mb-3"></i>
                        <h4 class="text-muted">Không tìm thấy sản phẩm nào</h4>
                        <p class="text-muted">Thử thay đổi từ khóa tìm kiếm hoặc bộ lọc</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('searchInput');
            const categoryFilter = document.getElementById('categoryFilter');
            const sortBy = document.getElementById('sortBy');
            const clearFilters = document.getElementById('clearFilters');
            const productsContainer = document.getElementById('productsContainer');
            const noResults = document.getElementById('noResults');
            const productItems = document.querySelectorAll('.product-item');

            function filterProducts() {
                const searchTerm = searchInput.value.toLowerCase();
                const selectedCategory = categoryFilter.value.toLowerCase();
                const sortValue = sortBy.value;
                let visibleCount = 0;

                // Convert NodeList to Array for sorting
                let products = Array.from(productItems);

                products.forEach(item => {
                    const name = item.getAttribute('data-name');
                    const category = item.getAttribute('data-category');

                    const matchesSearch = name.includes(searchTerm);
                    const matchesCategory = selectedCategory === '' || category === selectedCategory;

                    if (matchesSearch && matchesCategory) {
                        item.style.display = '';
                        visibleCount++;
                    } else {
                        item.style.display = 'none';
                    }
                });

                // Handle no results message
                if (visibleCount === 0) {
                    noResults.style.display = 'block';
                } else {
                    noResults.style.display = 'none';
                }

                // Apply sorting
                sortProducts(products, sortValue);
            }

            function sortProducts(products, sortValue) {
                products.sort((a, b) => {
                    const nameA = a.getAttribute('data-name');
                    const nameB = b.getAttribute('data-name');
                    const priceA = parseFloat(a.getAttribute('data-price'));
                    const priceB = parseFloat(b.getAttribute('data-price'));

                    if (sortValue === 'name-asc') {
                        return nameA.localeCompare(nameB);
                    } else if (sortValue === 'name-desc') {
                        return nameB.localeCompare(nameA);
                    } else if (sortValue === 'price-asc') {
                        return priceA - priceB;
                    } else if (sortValue === 'price-desc') {
                        return priceB - priceA;
                    }
                    return 0; // Default no sorting
                });

                // Re-append sorted elements
                products.forEach(item => productsContainer.appendChild(item));
            }

            searchInput.addEventListener('input', filterProducts);
            categoryFilter.addEventListener('change', filterProducts);
            sortBy.addEventListener('change', function() {
                filterProducts(); // Filter first, then sort the filtered subset
            });
            clearFilters.addEventListener('click', function() {
                searchInput.value = '';
                categoryFilter.value = '';
                sortBy.value = 'name-asc';
                filterProducts();
            });

            // Initial filter and sort
            filterProducts();
        });
    </script>
}

@section Styles {
    <style>
        .product-card {
            transition: transform 0.2s;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

            .product-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 4px 8px rgba(0,0,0,0.2);
            }

        .image-container {
            position: relative;
            overflow: hidden;
            padding-top: 75%; /* 4:3 Aspect Ratio */
        }

        .product-image {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .image-count {
            position: absolute;
            top: 10px;
            right: 10px;
            background: rgba(0,0,0,0.7);
            color: white;
            padding: 2px 8px;
            border-radius: 12px;
            font-size: 0.8rem;
        }

        .quick-actions {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            background: rgba(0,0,0,0.7);
            padding: 10px;
            display: flex;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.2s;
        }

        .image-container:hover .quick-actions {
            opacity: 1;
        }

        .description-text {
            font-size: 0.9rem;
            color: #666;
            margin-bottom: 1rem;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .price-text {
            color: #e74c3c;
            font-weight: bold;
        }

        .action-buttons .btn {
            font-size: 0.8rem;
        }

            .action-buttons .btn i {
                margin-right: 4px;
            }
    </style>
}